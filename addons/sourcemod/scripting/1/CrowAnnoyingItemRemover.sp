/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <sdktools>

#define VERSION "1.0"

new Handle:hClearMedkits;
new Handle:hReplacePills;
new Handle:hSafeRoomKits;
new Handle:hClearDefibs;
new Handle:hClearAmmo;
new Handle:hClearChainSaws;
new Handle:hClearWhump;
new Handle:hLimitThrows;
new Handle:hClearFire;
new Handle:hClearPipe;
new Handle:hClearBile;
new Handle:hModEnabled;
new Float:Saferoom[3];

public Plugin:myinfo = 
{
	name = "Crow's Annoying Item Remover",
	author = "Crow's Nest HarbingTarbl",
	description = "Removes annoying items :3",
	version = VERSION,
	url = ""
}

public OnPluginStart()
{
	hClearMedkits = CreateConVar("annoy_medkits", "1", "删除医疗包",FCVAR_NOTIFY | FCVAR_PLUGIN);
	hClearAmmo = CreateConVar("annoy_ammo", "0", "删除弹药部署包",FCVAR_NOTIFY | FCVAR_PLUGIN);
	hClearChainSaws = CreateConVar("annoy_chainsaw", "0", "删除电锯",FCVAR_NOTIFY | FCVAR_PLUGIN);
	hSafeRoomKits = CreateConVar("annoy_saferoom", "0", "保留安全房内的医疗包Keeps safe room first aid kits", FCVAR_NOTIFY | FCVAR_PLUGIN);
	hClearDefibs = CreateConVar("annoy_defibs", "0", "删除电击器",FCVAR_NOTIFY | FCVAR_PLUGIN);
	hClearWhump = CreateConVar("annoy_launcher", "1", "删除榴弹发射器",FCVAR_NOTIFY | FCVAR_PLUGIN);
	hModEnabled = CreateConVar("annoy_enable", "1", "开启或禁用本插件（1=ON/0=OFF）", FCVAR_NOTIFY | FCVAR_PLUGIN);
	hReplacePills = CreateConVar("annoy_pill_replace", "0", "用药丸替换医疗包Replaces removed medkits with pills(需要 annoy_medkits 1)", FCVAR_NOTIFY | FCVAR_PLUGIN);
	hClearFire = CreateConVar("annoy_limit_moly", "1", "只能由系统自动生成燃烧弹Limit Moly's to director spawned only", FCVAR_NOTIFY | FCVAR_PLUGIN);
	hClearBile = CreateConVar("annoy_limit_bile", "1", "只能由系统自动生成胆汁Limit Bile Bombs to director spawned only", FCVAR_NOTIFY | FCVAR_PLUGIN);
	hClearPipe = CreateConVar("annoy_limit_pipe", "1", "只能由系统自动生成管制炸弹Limit Pips to director spawned only", FCVAR_NOTIFY | FCVAR_PLUGIN);
	hLimitThrows = CreateConVar("annoy_limit_throws", "0", "Enable the limiting of throwable items to director spawned only", FCVAR_NOTIFY | FCVAR_PLUGIN);
	AutoExecConfig(true, "CrowAnnoyingItemRemover");
	CreateConVar("annoy",VERSION,"Crow's Annoying Item Remover Version",FCVAR_PLUGIN|FCVAR_SPONLY|FCVAR_REPLICATED|FCVAR_NOTIFY);
	HookEvent("round_start", Event_RoundStart, EventHookMode_PostNoCopy);
}



public Action:Event_RoundStart(Handle:event, String:name[], bool:dontBroadcast)
{
	if (GetConVarInt(hModEnabled) == 1)
	{
		new EntCount = GetEntityCount();
		new String:EdictName[128];
		
		if (GetConVarInt(hSafeRoomKits) == 1)
		{
			new String:Map[32];
			GetCurrentMap(Map, 32);
			if (StrContains(Map, "c1m1") != -1)
			{
				Saferoom[0] = 430.946594;
				Saferoom[1] = 5744.847168;
				Saferoom[2] = 2882.982178;
			}
			else if (StrContains(Map, "c1m2") != -1)
			{
				Saferoom[0] = 2397.798584;
				Saferoom[1] = 4966.103027;
				Saferoom[2] = 478.224670;
			}
			else if (StrContains(Map, "c1m3") != -1)
			{
				Saferoom[0] = 6532.310059;
				Saferoom[1] = -1473.890015;
				Saferoom[2] = 59.001575;
			}
			else if (StrContains(Map, "c1m4") != -1)
			{
				Saferoom[0] = -2201.226807;
				Saferoom[1] = -4692.452637;
				Saferoom[2] = 571.226318;
			}
			else if (StrContains(Map, "c2m1") != -1)
			{
				Saferoom[0] = 10671.254883;
				Saferoom[1] = 7857.397461;
				Saferoom[2] = -540.156860;
			}
			else if (StrContains(Map, "c2m2") != -1)
			{
				Saferoom[0] = 1724.968750;
				Saferoom[1] = 2889.561523;
				Saferoom[2] = 39.232277;
			}
			else if (StrContains(Map, "c2m3") != -1)
			{
				Saferoom[0] = 4106.663574;
				Saferoom[1] = 2159.387451;
				Saferoom[2] = -28.767725;
			}
			else if (StrContains(Map, "c2m4") != -1)
			{
				Saferoom[0] = 2925.554199;
				Saferoom[1] = 3855.020020;
				Saferoom[2] = -187.968750;
			}
			else if (StrContains(Map, "c2m5") != -1)
			{
				Saferoom[0] = -653.677185;
				Saferoom[1] = 2220.736572;
				Saferoom[2] = -220.998734;
			}
			else if (StrContains(Map, "c3m1") != -1)
			{
				Saferoom[0] = -12465.958984;
				Saferoom[1] = 10524.093750;
				Saferoom[2] = 275.434265;
			}
			else if (StrContains(Map, "c3m2") != -1)
			{
				Saferoom[0] = -8213.431641;
				Saferoom[1] = 7622.576172;
				Saferoom[2] = 44.810654;
			}
			else if (StrContains(Map, "c3m3") != -1)
			{
				Saferoom[0] = -5697.970703;
				Saferoom[1] = 1999.031250;
				Saferoom[2] = 171.226288;
			}
			else if (StrContains(Map, "c3m4") != -1)
			{
				Saferoom[0] = -5019.223145;
				Saferoom[1] = -1568.031250;
				Saferoom[2] = -64.564751;
			}
			else if (StrContains(Map, "c4m1") != -1)
			{
				Saferoom[0] = -6012.471680;
				Saferoom[1] = 7385.575684;
				Saferoom[2] = 148.909729;
			}
			else if (StrContains(Map, "c4m2") != -1)
			{
				Saferoom[0] = 3781.565186;
				Saferoom[1] = -1668.598145;
				Saferoom[2] = 262.723663;
			}
			else if (StrContains(Map, "c4m3") != -1)
			{
				Saferoom[0] = -1804.286743;
				Saferoom[1] = -13777.250977;
				Saferoom[2] = 130.031250;
			}
			else if (StrContains(Map, "c4m4") != -1)
			{
				Saferoom[0] = 4039.968750;
				Saferoom[1] = -1551.401123;
				Saferoom[2] = 262.473663;
			}
			else if (StrContains(Map, "c4m5") != -1)
			{
				Saferoom[0] = -3383.520996;
				Saferoom[1] = 7791.185059;
				Saferoom[2] = 120.031250;
			}
			else if (StrContains(Map, "c5m1") != -1)
			{
				Saferoom[0] = 735.921692;
				Saferoom[1] = 729.955750;
				Saferoom[2] = -481.968750;
			}
			else if (StrContains(Map, "c5m2") != -1)
			{
				Saferoom[0] = -4335.529785;
				Saferoom[1] = -1127.393677;
				Saferoom[2] = -343.968750;
			}
			else if (StrContains(Map, "c5m3") != -1)
			{
				Saferoom[0] = 6289.354492;
				Saferoom[1] = 8212.956055;
				Saferoom[2] = 35.232281;
			}
			else if (StrContains(Map, "c5m4") != -1)
			{
				Saferoom[0] = -3058.571045;
				Saferoom[1] = 4778.432617;
				Saferoom[2] = 103.226173;
			}
			else if (StrContains(Map, "c5m5") != -1)
			{
				Saferoom[0] = -11924.932617;
				Saferoom[1] = 5981.550293;
				Saferoom[2] = 547.226318;
			}
		}
		
		for (new i = 0; i <= EntCount; i++)
		{
			if (IsValidEntity(i))
			{
				GetEdictClassname(i, EdictName, sizeof(EdictName));
				if (GetConVarInt(hClearMedkits) == 1)
				{
					if (StrContains(EdictName, "weapon_first_aid_kit", false) != -1)
					{
						new Float:Location[3];
						GetEntPropVector(i, Prop_Send, "m_vecOrigin", Location);
						if ( (GetConVarInt(hSafeRoomKits) == 0) || (GetVectorDistance(Location, Saferoom, false) > 200))
						{
							if (GetConVarInt(hReplacePills) == 1)
							{
								new index = CreateEntityByName("weapon_pain_pills_spawn");
								if ( index != -1)
								{
									new Float:Angle[3];
									GetEntPropVector(i, Prop_Send, "m_angRotation", Angle);
									TeleportEntity(index, Location, Angle, NULL_VECTOR);
									DispatchSpawn(index);
								}
							}
							AcceptEntityInput(i, "Kill");
						}
						continue;
					}
				}
				if (GetConVarInt(hClearDefibs) == 1)
				{
					if (StrContains(EdictName, "weapon_defibrillator", false) != -1)
					{
						AcceptEntityInput(i, "Kill");
						continue;
					}
				}
				if (GetConVarInt(hClearAmmo) == 1)
				{
					if (StrContains(EdictName, "weapon_upgradepack_explosive", false) != -1)
					{
						AcceptEntityInput(i, "Kill");
						continue;
					}
				}
				if (GetConVarInt(hClearAmmo) == 1)
				{
					if (StrContains(EdictName, "weapon_upgradepack_incendiary", false) != -1)
					{
						AcceptEntityInput(i, "Kill");
						continue;
					}
				}
				if (GetConVarInt(hClearChainSaws) == 1)
				{
					if (StrContains(EdictName, "weapon_chainsaw", false) != -1)
					{
						AcceptEntityInput(i, "Kill");
						continue;
					}
				}
				if (GetConVarInt(hClearWhump) == 1)
				{
					if (StrContains(EdictName, "weapon_grenade", false) != -1)
					{
						AcceptEntityInput(i, "Kill");
						continue;
					}
				}
				if (GetConVarInt(hLimitThrows) == 1)
				{
					if (GetConVarInt(hClearPipe) == 1)
					{
						if (strcmp(EdictName, "weapon_pipe_bomb", false) == 0)
						{
							AcceptEntityInput(i, "Kill");
							continue;
						}
					}
					if(GetConVarInt(hClearFire) == 1)
					{
						if (strcmp(EdictName, "weapon_molotov", false) == 0)
						{
							AcceptEntityInput(i, "Kill");
							continue;
						}
					}
					if(GetConVarInt(hClearBile) == 1)
					{
						if (strcmp(EdictName, "weapon_vomitjar") == 0)
						{
							AcceptEntityInput(i, "Kill");
							continue;
						}
					}
				}
			}
		}
	}
}
